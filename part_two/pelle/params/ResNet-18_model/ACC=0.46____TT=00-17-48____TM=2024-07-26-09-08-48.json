{
    "cfg": {
        "resize_size": 256,
        "crop_size": 224,
        "batch_size": 16,
        "num_epochs": 15,
        "lr": 0.001,
        "wd": 0.0001,
        "step_size": 5,
        "run_name": "run: ResNet-18"
    },
    "data_transforms": {
        "train": [
            "RandomResizedCrop(size=(224, 224), scale=(0.08, 1.0), ratio=(0.75, 1.3333), interpolation=bilinear, antialias=True)",
            "RandomHorizontalFlip(p=0.5)",
            "RandomVerticalFlip(p=0.5)",
            "RandomRotation(degrees=[-15.0, 15.0], interpolation=nearest, expand=False, fill=0)",
            "ColorJitter(brightness=(0.6, 1.4), contrast=(0.6, 1.4), saturation=(0.6, 1.4), hue=(-0.1, 0.1))",
            "RandomApply(",
            "p=0.5",
            "GaussianBlur(kernel_size=(3, 3), sigma=(0.1, 2.0))",
            ")",
            "Resize(size=256, interpolation=bilinear, max_size=None, antialias=True)",
            "CenterCrop(size=(224, 224))",
            "ToTensor()",
            "Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])"
        ],
        "val": [
            "Resize(size=256, interpolation=bilinear, max_size=None, antialias=True)",
            "CenterCrop(size=(224, 224))",
            "ToTensor()",
            "Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])"
        ],
        "test": [
            "ToTensor()",
            "Resize(size=256, interpolation=bilinear, max_size=None, antialias=True)"
        ]
    },
    "model_structure": [
        "(conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)",
        "(bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(relu): ReLU(inplace=True)",
        "(maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)",
        "(layer1): Sequential(",
        "(0): BasicBlock(",
        "(conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        ")",
        "(1): BasicBlock(",
        "(conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        ")",
        ")",
        "(layer2): Sequential(",
        "(0): BasicBlock(",
        "(conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)",
        "(bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(downsample): Sequential(",
        "(0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)",
        "(1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        ")",
        ")",
        "(1): BasicBlock(",
        "(conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        ")",
        ")",
        "(layer3): Sequential(",
        "(0): BasicBlock(",
        "(conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)",
        "(bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(downsample): Sequential(",
        "(0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)",
        "(1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        ")",
        ")",
        "(1): BasicBlock(",
        "(conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        ")",
        ")",
        "(layer4): Sequential(",
        "(0): BasicBlock(",
        "(conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)",
        "(bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(downsample): Sequential(",
        "(0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)",
        "(1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        ")",
        ")",
        "(1): BasicBlock(",
        "(conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        ")",
        ")",
        "(avgpool): AdaptiveAvgPool2d(output_size=(1, 1))",
        "(fc): Linear(in_features=512, out_features=43, bias=True)"
    ]
}